[
    {
        "label": "tkinter",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tkinter",
        "description": "tkinter",
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "ttk",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "messagebox",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "install_package",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def install_package(package_name):\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package_name])\n#Try to import the base64 module, install it if not present\ntry:\n    import base64\nexcept ImportError:\n    install_package(\"base64\")\n# Function to generate the password hash\ndef generate_password_hash():\n    try:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "generate_password_hash",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def generate_password_hash():\n    try:\n        hashbits = int(bit_size_entry.get())\n        if hashbits <= 0:\n            messagebox.showerror(\"Error\", \"Please enter a positive integer.\")\n            return\n        hashbytes = ((hashbits + 7) // 8) ** 2\n        password_hash = base64.b64encode(os.urandom(hashbytes).decode())\n        hash_output_label.config(text=password_hash)\n    except ValueError:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "root = tk.Tk();\nroot.title(\"Password Hash Generator\")",
        "detail": "main",
        "documentation": {}
    }
]